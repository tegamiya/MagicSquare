//★9X9 魔方陣　自分が1の位置を指定★

#include<stdio.h>
#include<math.h>
#include<time.h>
#include<stdlib.h>
#include<conio.h>
#define P printf
#define S scanf
#define N 9

int main(){

	int i, j ,k , a[N][N]={0}, b[N][N]={0},c[N][N]={0},kei[4]={0}, R ,G , K , L ,T;

	P("行を入力\n");
	S("%d",&G);
	P("列を入力\n");
	S("%d",&R);


	//0~8以外の数字が入力された場合終了
	if(G < 0 || R < 0 || G > 8 || R > 8){
		P("範囲内（0~8）の間で入力してください\n");
		return 0;
	}

	//列
	j=R;

	//行
	i=G;

	//K = 魔方陣である数
	K = (N*N*N+N)/2;
	P("縦横斜=%d\n\n",K);

	/////////////////////////////////////////////////////////////////////////////////////
	if(R==4 && G==4){ //中央
			int   G[N][N]={0}, A[N][N]={0}, B[9]={0}, Z[9]={0}, kei[4]={0}, C[N][N]={0}, V[N+1][N+1]={0};
	int  a[N]={1,2,3,7,8,9,4,5,6}, b[N]={3,1,2,9,7,8,6,4,5}, c[N]={2,3,1,8,9,7,5,6,4}  ;
	int i ,j , sentaku;
	int K, T, W , R;
	int f=0, cnt=0;

	//K = 魔方陣である数
	K = (N*N*N+N)/2;
	P("縦横斜=%d\n\n",K);

	P("\n---------------------------------------\n");

	//☆表

	for(i=0; i<N; i++){
		if(cnt>=0 && cnt<3) {
		  for(j=0; j<N; j++){
			  V[i][j] = a[(j+f)%N];
		  }
		}

		if(cnt>=3 && cnt<6){
		  for(j=0; j<N; j++){
			  V[i][j] = b[(j+f)%N];
		  }
		}

		if(cnt>=6){
		  for(j=0; j<N; j++){
			  V[i][j] = c[(j+f)%N];
		  }
		}
			cnt++;
			f+=6;
			if(f==18)f=0;
	}


	//反転

	for(i=0; i<N; i++){
		T=0;
		for(j=N-1; j>=0; j--){
		 G[i][T] = V[i][j];
	     T++;
		}
	}
	
	for(i=0; i<N; i++){
		for(j=0; j<N; j++){
		 G[i][j] =V[i][j]+N*(G[i][j]-1);
		}
	}

	//出力5パターン
  	srand((unsigned)time(NULL));
	{ R=rand()%5; }

	if(R==0){
	for(i=0;i<N;i++){
		for(j=0;j<N;j++){
			P("%4d",G[i][j]);
		}
		P("\n");
	 }
	}
	else if(R==1){
	for(i=0;i<N;i++){
		for(j=N-1;j>=0;j--){
			P("%4d",G[i][j]);
		}
		P("\n");
	 }
	}
	else if(R==2){
	for(i=N-1;i>=0;i--){
		for(j=N-1;j>=0;j--){
			P("%4d",G[i][j]);
		}
		P("\n");
	 }
	}
	else if(R==3){
	for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%4d",G[i][j]);
		}
		P("\n");
	 }
	}
	else if(R==4){
	for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%4d",G[j][i]);
		}
		P("\n");
	 }
	}


	//魔方陣の検算 G[i][j]
	
	for(j=0;j<N;j++){
		kei[0] += G[0][j];
	}
	for(j=0;j<N;j++){
		kei[1] += G[j][0];
	}
	for(j=0;j<N;j++){
		kei[2] += G[j][j];
	}
	
	T=0;
	for(j=N-1;j>=0;j--){
		kei[3] += G[T][j];
		T++;
	}


	P("\n横の合計  %d",kei[0]);
	if(kei[0]==K){
		P("★OK\n");
	}
	else{
		P("------NG\n");
	}

	P("縦の合計  %d",kei[1]);
	if(kei[1]==K){
		P("★OK\n");
	}
	else{
		P("------NG\n");
	}
	P("＼斜め合計%d",kei[2]);
	if(kei[2]==K){
		P("★OK\n");
	}
	else{
		P("------NG\n");
	}
	P("／斜め合計%d",kei[3]);
	if(kei[3]==K){
		P("★OK\n");
	}
	else{
		P("------NG\n");
	}
		
	}

	///////////////////////////////隅
	else if( R==0 && G==N-1 || R==N-1 && G==0 || R==0 && G==0 || G==N-1 && R==N-1){

	int   M[N][N]={0}, A[N][N]={0}, B[9]={0}, Z[9]={0}, kei[4]={0}, C[N][N]={0}, V[N+1][N+1]={0};
	int  a[N]={1,2,3,7,8,9,4,5,6}, b[N]={3,1,2,9,7,8,6,4,5}, c[N]={2,3,1,8,9,7,5,6,4}  ;
	int i ,j , sentaku;
	int K, T, W , RE, GI;
	int f=0, cnt=0;

	//K = 魔方陣である数
	K = (N*N*N+N)/2;

	//☆表

	for(i=0; i<N; i++){


		if(cnt>=0 && cnt<3) {
			for(j=0; j<N; j++){
				V[i][j] = a[(j+f)%N];
			}
		}

		if(cnt>=3 && cnt<6){
			for(j=0; j<N; j++){
				V[i][j] = b[(j+f)%N];
			}
		}

		if(cnt>=6){
		for(j=0; j<N; j++){
			V[i][j] = c[(j+f)%N];
			}
		}
			cnt++;
			f+=6;
			if(f==18)f=0;
	}


	//反転

	for(i=0; i<N; i++){
		T=0;
		for(j=N-1; j>=0; j--){
		 M[i][T] = V[i][j];
	     T++;
		}
	}


	for(i=0; i<N; i++){
		for(j=0; j<N; j++){
		 M[i][j] =V[i][j]+N*(M[i][j]-1);
		}
	}

	//表 A ランダム数を1-9に変換
	for(i=0; i<N; i++){
		B[i]=((i+R+4)%N)+1;
	}


	//1と５の固定
	for(i=0; i<N; i++){

		if(B[i]==5){
			 W    = B[0];
			 B[0] = 5;
			 B[i] = W;
		}

		if(B[i]==1){
			 W    = B[8];
			 B[8] = 1;
			 B[i] = W;
		}
	}


	for(i=0; i<N ;i++){
		T=i*8;
		for(j=0; j<N; j++){
			A[i][j] = B[(j+T)%N];
		}
	}

	//	0 3 6 = 15

		for(i=0; i<N; i++){

		if(B[i]==5){
		 W    = B[3];
		 B[3] = 5;
		 B[i] = W;
		}

		if(B[i]==9){
		 W    = B[6];
		 B[6] = 9;
		 B[i] = W;
		}

		if(B[i]==1){
		 W    = B[0];
		 B[0] = 1;
		 B[i] = W;
		}
	}

	for(i=0; i<N ;i++){
		T=i*5;
		for(j=N-1; j>=0; j--){
			C[i][j] = B[T%N];
			T++;
		}
	}


	//合体
	for(i=0; i<N ;i++){
		for(j=0; j<N; j++){
			M[i][j] = N*(A[i][j]-1)+C[i][j];
		}
	}

	//出力

	if(R==0 && G==0){
	for(i=0;i<N;i++){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }

	}
	else if(R==N-1 && G==0){
			for(i=N-1;i>=0;i--){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }


	}
	else if(R==N-1 && G==N-1){
		for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }


	}
	else if(R==0 && G==N-1){
			for(i=0;i<N;i++){
		for(j=0;j<N;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }



	}
	else if(R==N-1 && G==0){
	for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%3d",M[j][i]);
		}
		P("\n");
	 }
	}



	//魔方陣の検算 G[i][j]
	
		for(j=0;j<N;j++){
			kei[0] += M[0][j];
		}
		for(j=0;j<N;j++){
			kei[1] += M[j][0];
		}
		for(j=0;j<N;j++){
			kei[2] += M[j][j];
		}
		T=0;
		for(j=N-1;j>=0;j--){
			kei[3] += M[T][j];
			T++;
		}


		P("\n横の合計  %d",kei[0]);
		if(kei[0]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		P("縦の合計  %d",kei[1]);
		if(kei[1]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("＼斜め合計%d",kei[2]);
		if(kei[2]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("／斜め合計%d",kei[3]);
		if(kei[3]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		else if(G==5 && R==3|| G==3 &&R ==3 || G==5 && R==5 || G==3 && R==5){
			int M[N][N]={0}, A[N][N]={0}, B[9]={0}, Z[9]={0}, kei[4]={0}, C[N][N]={0};
			int i ,j ;
			int K, T, W ,L;

	//K = 魔方陣である数
	K = (N*N*N+N)/2;


	//表 A ランダム数を1-9に変換
	for(i=0; i<N; i++){
		B[i]=((i+2)%N)+1;
	}

	for(i=0; i<N ;i++){
		T=i*8;
		for(j=0; j<N; j++){
			A[i][j] = B[(j+T)%N];

		}
	}
	//斜めの数値を交換

	L=A[0][0];


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(A[i][j] == 5){
				A[i][j]=L;
			}
		}
	}
	//ななめを５に
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(i==j){
				A[i][j] = 5;
			}
		}
	}


	//	0 3 6 = 15

	B[0]=9;
	B[1]=3 ;
	B[2]=2 ;
	B[3]=1 ;
	B[4]=6 ;
	B[5]=8 ;
	B[6]=5 ;
	B[7]=4 ;
	B[8]=7 ;


	//５ずつずらす必要がある
	for(i=0; i<N ;i++){
		T=i*5;
		for(j=N-1; j>=0; j--){
			C[i][j] = B[T%N];
			T++;
		}
	}


	//合体
	for(i=0; i<N ;i++){
		for(j=0; j<N; j++){
			M[i][j] = N*(A[i][j]-1)+C[i][j];

		}
	}

	
	//出力 G[i][j]

	if(G==5 && R==3){
	for(i=0; i<N ;i++){
		for(j=0; j<N ;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	}
	}

	else if(G==3 && R==5){
		for(i=N-1;i>=0;i--){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
		}
	}

	else if(R==5 && G==5){
		for(i=0;i<N;i++){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }
	 
	}

	else if(R==3 && G==3){
		for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }
	}


	//魔方陣の検算 G[i][j]
	
		for(j=0;j<N;j++){
			kei[0] += M[0][j];
		}
		for(j=0;j<N;j++){
			kei[1] += M[j][0];
		}
		for(j=0;j<N;j++){
			kei[2] += M[j][j];
		}
		T=0;
		for(j=N-1;j>=0;j--){
			kei[3] += M[T][j];
			T++;
		}


		P("\n横の合計    %d",kei[0]);
		if(kei[0]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		P("縦の合計    %d",kei[1]);
		if(kei[1]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("１斜めの合計%d",kei[2]);
		if(kei[2]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("２斜めの合計%d",kei[3]);
		if(kei[3]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		}// else if
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		else if(G==1 && R==7|| G==1 &&R ==1 || G==7 && R==7 || G==7 && R==1){
				int   M[N][N]={0}, A[N][N]={0}, B[9]={0}, Z[9]={0}, kei[4]={0}, C[N][N]={0};
	int i ,j ;
	int K, T, W ,L;

	//K = 魔方陣である数
	K = (N*N*N+N)/2;


	//表 A ランダム数を1-9に変換
	for(i=0; i<N; i++){
		B[i]=((i+6)%N)+1;
	}

	for(i=0; i<N ;i++){
		T=i*8;
		for(j=0; j<N; j++){
			A[i][j] = B[(j+T)%N];

		}
	}
		//斜めの数値を交換

	L=A[0][0];


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(A[i][j] == 5){
				A[i][j]=L;
			}
		}
	}
	//ななめを５に
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(i==j){
				A[i][j] = 5;
			}
		}
	}


	//	0 3 6 = 15

	B[0]=9;
	B[1]=3 ;
	B[2]=2 ;
	B[3]=5 ;
	B[4]=6 ;
	B[5]=8 ;
	B[6]=1 ;
	B[7]=4 ;
	B[8]=7 ;


	//５ずつずらす必要がある
	for(i=0; i<N ;i++){
		T=i*5;
		for(j=N-1; j>=0; j--){
			C[i][j] = B[T%N];
			T++;
		}
	}

	//合体
	for(i=0; i<N ;i++){
		for(j=0; j<N; j++){
			M[i][j] = N*(A[i][j]-1)+C[i][j];

		}
	}
	
	//出力 G[i][j]

	if(G==7 && R==1){
	for(i=0; i<N ;i++){
		for(j=0; j<N ;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	}
	}

	else if(G==1 && R==7){
		for(i=N-1;i>=0;i--){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
		}
	}

	else if(R==7 && G==7){
		for(i=0;i<N;i++){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }
	 
	}

	else if(R==1 && G==1){
		for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }
	}


	//魔方陣の検算 G[i][j]
	
		for(j=0;j<N;j++){
			kei[0] += M[0][j];
		}
		for(j=0;j<N;j++){
			kei[1] += M[j][0];
		}
		for(j=0;j<N;j++){
			kei[2] += M[j][j];
		}
		T=0;
		for(j=N-1;j>=0;j--){
			kei[3] += M[T][j];
			T++;
		}


		P("\n横の合計    %d",kei[0]);
		if(kei[0]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		P("縦の合計    %d",kei[1]);
		if(kei[1]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("１斜めの合計%d",kei[2]);
		if(kei[2]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("２斜めの合計%d",kei[3]);
		if(kei[3]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		}// else if
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		else if(G==2 && R==6|| G==2 &&R ==2 || G==6 && R==6 || G==6 && R==2){
				int   M[N][N]={0}, A[N][N]={0}, B[9]={0}, Z[9]={0}, kei[4]={0}, C[N][N]={0};
	int i ,j ;
	int K, T, W ,L;

	//K = 魔方陣である数
	K = (N*N*N+N)/2;


	//表 A ランダム数を1-9に変換
	for(i=0; i<N; i++){
		B[i]=((i+4)%N)+1;
	}

	for(i=0; i<N ;i++){
		T=i*8;
		for(j=0; j<N; j++){
			A[i][j] = B[(j+T)%N];

		}
	}
		//斜めの数値を交換

	L=A[0][0];


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(A[i][j] == 5){
				A[i][j]=L;
			}
		}
	}
	//ななめを５に
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(i==j){
				A[i][j] = 5;
			}
		}
	}


	//	0 3 6 = 15

	B[0]=1 ;
	B[1]=4 ;
	B[2]=3 ;
	B[3]=5 ;
	B[4]=2 ;
	B[5]=7 ;
	B[6]=9 ;
	B[7]=8 ;
	B[8]=6 ;


	//５ずつずらす必要がある
	for(i=0; i<N ;i++){
		T=i*5;
		for(j=N-1; j>=0; j--){
			C[i][j] = B[T%N];
			T++;
		}
	}


	//合体
	for(i=0; i<N ;i++){
		for(j=0; j<N; j++){
			M[i][j] = N*(A[i][j]-1)+C[i][j];

		}
	}

	
	//出力 G[i][j]

	if(G==6 && R==2){
	for(i=0; i<N ;i++){
		for(j=0; j<N ;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	}
	}

	else if(G==2 && R==6){
		for(i=N-1;i>=0;i--){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
		}
	}

	else if(R==6 && G==6){
		for(i=0;i<N;i++){
		for(j=N-1;j>=0;j--){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }
	 
	}

	else if(R==2 && G==2){
		for(i=N-1;i>=0;i--){
		for(j=0;j<N;j++){
			P("%3d",M[i][j]);
		}
		P("\n");
	 }
	}


	//魔方陣の検算 G[i][j]
	
		for(j=0;j<N;j++){
			kei[0] += M[0][j];
		}
		for(j=0;j<N;j++){
			kei[1] += M[j][0];
		}
		for(j=0;j<N;j++){
			kei[2] += M[j][j];
		}
		T=0;
		for(j=N-1;j>=0;j--){
			kei[3] += M[T][j];
			T++;
		}


		P("\n横の合計    %d",kei[0]);
		if(kei[0]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		P("縦の合計    %d",kei[1]);
		if(kei[1]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("１斜めの合計%d",kei[2]);
		if(kei[2]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("２斜めの合計%d",kei[3]);
		if(kei[3]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		}// else if
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	else{


	//配列初期化
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			a[i][j] = 99;
		}
	}

	//0を斜めに

	i=G;
	j=R;

	a[i][j] = 0;

	for(k = 0; k<N ; k++){

		i++;
		j++;
		if(i>=N) i -= N;
		if(j>=N) j -= N;

		a[i][j] = 0;

	}

	//1～８を斜めに

		i=G;
		j=R;

		for(k=1; k<N; k++){
			j++;

			for(L=0; L<N; L++){
			i++;
			j++;
			if(i>=N) i -= N;
			if(j>=N) j -= N;

			a[i][j] = k;
			}
	}


	//斜めの数値を４の列と交換

	L=a[1][1];


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(a[i][j] == 4){
				a[i][j]=L;
			}
		}
	}

	//斜めを４にする
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(i==j)a[i][j] = 4;
		}
	}

	
	//配列初期化 あとで消す
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			b[i][j] = 99;
		}
	}

	//0を斜めに
	i=G;
	j=R;

	b[i][j] = 0;

	for(k = 0; k<N ; k++){

		i--;
		j++;
		if(i<0) i += N;
		if(j>=N) j -= N;
		
		if(b[i][j] == 0) {
			j-=6;
			i-=3;
		}

		b[i][j] = 0;

	}

	//１～９を斜めに
	i=G;
	j=R;
	b[G-1][R-1] = 1;


		for(k=1; k<N; k++){
			j--;

			for(L=0; L<N; L++){
			i--;
			j++;
			if(i<0) i += N;
			if(j>=N) j -= N;

			b[i][j] = k;
			}
	}
	
	//斜めの数値を４の列と交換

	L=b[0][8];


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			if(b[i][j] == 4){
				b[i][j]=L;
			}
		}
	}

	//斜めを４にする 

	for(i=0; i<N ; i++){
		for(j=N-1; j>=0; j--){
			if((i+j)==8){
				b[i][j] = 4;
			}
		}
	}

	//a  b 合成　＝　c


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			b[i][j] = b[i][j]*N+1;
		}
	}


	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			c[i][j] = a[i][j]+b[i][j];
		}
	}

	P("\n");


	//出力
	for(i=0; i<N ; i++){
		for(j=0; j<N; j++){
			P("%3d",c[i][j]);
		}
		P("\n");
	}


	//魔方陣の検算 G[i][j]
	
		for(j=0;j<N;j++){
			kei[0] += c[0][j];
		}
		for(j=0;j<N;j++){
			kei[1] += c[j][0];
		}
		for(j=0;j<N;j++){
			kei[2] += c[j][j];
		}
		T=0;
		for(j=N-1;j>=0;j--){
			kei[3] += c[T][j];
			T++;
		}

		P("\n横の合計  %d",kei[0]);
		if(kei[0]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}

		P("縦の合計  %d",kei[1]);
		if(kei[1]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("＼斜め合計%d",kei[2]);
		if(kei[2]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}
		P("／斜め合計%d",kei[3]);
		if(kei[3]==K){
			P("★OK\n");
		}
		else{
			P("------NG\n");
		}


		}//else if
		

	return 0;
}









